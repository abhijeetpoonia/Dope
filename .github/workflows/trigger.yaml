name: Multi-Repo Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        description: "Terraform action to perform"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
      repositories:
        description: "Repositories to process (comma-separated)"
        required: true
        default: "asg-1,ec2"
        type: string
  repository_dispatch:
    types: [terraform-trigger, pr-trigger]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Set Repository Name
        id: set_repo
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "repository=${{ github.event.client_payload.repository }}" >> $GITHUB_OUTPUT
          else
            echo "repository=${{ github.event.inputs.repositories }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ steps.set_repo.outputs.repository }}
          ref: ${{ github.event.client_payload.ref || 'prod' }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        id: init
        working-directory: enviroments/prod
        run: |
          terraform init \
            -backend-config="bucket=asgbucket121" \
            -backend-config="key=asg/${{ steps.set_repo.outputs.repository }}/terraform.tfstate" \
            -backend-config="region=ap-south-1" \
            -backend-config="encrypt=true"

      - name: Terraform Validate
        id: validate
        working-directory: enviroments/prod
        run: terraform validate -no-color

      - name: Terraform Plan
        if: |
          github.event.client_payload.action == 'plan' || github.event.inputs.terraform_action == 'plan'
        id: plan
        working-directory: enviroments/prod
        run: terraform plan -no-color -out=tfplan

      - name: Update Pull Request
        if: |
          github.event.client_payload.pr_number != '' && github.event.client_payload.action == 'plan'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const output = `#### Terraform Plan Results for ${{ steps.set_repo.outputs.repository }}
            #### Terraform Initialization âœ…
            #### Terraform Validation âœ…
            #### Terraform Plan ðŸ“–
            <details><summary>Show Plan</summary>
            \
            ${process.env.PLAN_OUTPUT}
            \
            </details>
            *Pushed by: @${{ github.actor }}, Action: ${{ github.event_name }}*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: '${{ github.event.client_payload.repository }}',
              issue_number: ${{ github.event.client_payload.pr_number }},
              body: output
            });
        env:
          PLAN_OUTPUT: ${{ steps.plan.outputs.stdout }}

      - name: Terraform Apply
        if: |
          (github.event.client_payload.action == 'apply' && github.event.client_payload.pr_merged == true) || github.event.inputs.terraform_action == 'apply'
        working-directory: enviroments/prod
        run: terraform apply -auto-approve tfplan
